version: 1.0.{build}

branches:
  # whitelist
  only:
    - master

init:

skip_tags: true

image: Visual Studio 2019
shallow_clone: true
clone_depth: 1

environment:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  CERTES_ACME_ACCOUNT_KEY:
    secure: fmkn8cbE+A1dHITS3s7NADqKi+2rYNKSSjuuLWvkX199WThoEptlCXKAwxlMhWZtBrXdNU5D+1RHI2ouDwWF7hwcIHcGf30v2UohFR+YHujT/N6c4EnK3261CNNm6AklbINPJ72+QPu04/NqEzDAtA==
  CERTES_AZURE_SUBSCRIPTION_ID:
    secure: u2ucwWE9SyLLf4RRaNioPpgoqHf9vIwY+kgtbTmf8vKXIKZIPaLOFDC8gH7rZd06
  CERTES_AZURE_TENANT_ID:
    secure: 4FrR9+ARA8H+bLFFQDT4C1TAZv/LTO69vFpfjpqR5BVTedqgsZcey6xuS2TDA46l
  CERTES_AZURE_CLIENT_ID:
    secure: dp7MAPn/z/amC3/+IpVOdDtXESia2b/kgMj4DlzgmJfiWVewj1VFHQjBr6KO2cTZ
  CERTES_AZURE_CLIENT_SECRET:
    secure: gLx/LNylDtCyrnwtdDj7aLdeLlVI8U5q8nxu4cX+i0RH5I53t8eEKCcEZKoaj9W5

cache:

install:
  - ps: >-
        $domain1 = "*.lo0.in";
        $domain2 = "*.ci-$($env:APPVEYOR_BUILD_NUMBER).lo0.in";
  - ps: dotnet tool install dotnet-certes -g
  - ps: $env:Path += ";$($env:USERPROFILE)\.dotnet\tools\"

nuget:
  disable_publish_on_pr: true

build_script:
  # create wildcard order
  - ps: Add-AppveyorMessage -Message "certes order new $domain1 $domain2"
  - ps: $order = certes order new $domain1 $domain2 | ConvertFrom-Json
  - ps: $orderLocation = $order.location
  # deploy DNS response to Azure
  - ps: Add-AppveyorMessage -Message "certes az dns $orderLocation $domain1 --resource-group certes"
  - ps: certes az dns $orderLocation $domain1 --resource-group certes
  - ps: Add-AppveyorMessage -Message "certes az dns $orderLocation $domain2 --resource-group certes"
  - ps: certes az dns $orderLocation $domain2 --resource-group certes
  # validate DNS response
  - ps: Add-AppveyorMessage -Message "certes order validate $orderLocation $domain1 dns"
  - ps: certes order validate $orderLocation $domain1 dns
  - ps: Add-AppveyorMessage -Message "certes order validate $orderLocation $domain2 dns"
  - ps: certes order validate $orderLocation $domain2 dns
  # submit CSR
  - ps: Add-AppveyorMessage -Message "certes order finalize $orderLocation --dn `"CN=$($domain)`" --out ./key.pem"
  - ps: certes order finalize $orderLocation --dn "CN=$($domain)" --out ./key.pem
  # install SSL binding for Azure web app
  - ps: Add-AppveyorMessage -Message "certes az app $orderLocation www.lo0.in certes --slot ci --resource-group certes --private-key ./key.pem"
  - ps: certes az app $orderLocation www.lo0.in certes-qa --resource-group certes --private-key ./key.pem | Out-Null
  # export certificate
  - ps: Add-AppveyorMessage -Message "certes cert pem $orderLocation --out cert.pem"
  - ps: certes cert pem $orderLocation --out cert.pem
  - ps: Add-AppveyorMessage -Message "certes cert pfx $orderLocation certes --private-key ./key.pem --out cert.pfx"
  - ps: certes cert pfx $orderLocation certes --private-key ./key.pem --out cert.pfx

test: off

artifacts:
  - path: '**\*.pfx'
    name: pfx

  - path: '**\*.pem'
    name: pem

deploy:
  - provider: GitHub
    release: v$(APPVEYOR_BUILD_VERSION)
    description: 'PFX password: certes'
    auth_token:
      secure: B+lTI7i/tnZeg1ZSmho3HvOWjs0C4hptNy5cvWgF0Nn7b6v8nwT/mxEWVCfIJ7Fy
    artifact: pfx,pem
    draft: false
    prerelease: false
    on:
      branch: master
